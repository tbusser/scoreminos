{"version":3,"sources":["webpack://scoreminos/./src/scripts/03-modules/NavigationManager.ts","webpack://scoreminos/./src/scripts/02-utilities/decorators/bind.ts","webpack://scoreminos/./src/scripts/03-modules/Player.ts","webpack://scoreminos/./src/scripts/03-modules/PlayerManager.ts","webpack://scoreminos/./src/scripts/01-global/enum.ts","webpack://scoreminos/./src/scripts/03-modules/rules.ts","webpack://scoreminos/./src/scripts/03-modules/scoring.ts","webpack://scoreminos/./src/scripts/04-components/Dialog.ts","webpack://scoreminos/./src/scripts/02-utilities/dom.ts","webpack://scoreminos/./src/scripts/04-components/Header.ts","webpack://scoreminos/./src/scripts/04-components/Footer.ts","webpack://scoreminos/./src/scripts/04-components/BaseController.ts","webpack://scoreminos/./src/scripts/04-components/PlayerInput/PlayerInput.ts","webpack://scoreminos/./src/scripts/03-modules/error-message.ts","webpack://scoreminos/./src/scripts/05-widgets/controllers/GameStartController.ts","webpack://scoreminos/./src/scripts/05-widgets/controllers/PlayerSelectController.ts","webpack://scoreminos/./src/scripts/03-modules/fly-out.ts","webpack://scoreminos/./src/scripts/04-components/NumberPad.ts","webpack://scoreminos/./src/scripts/04-components/NumberEntry.ts","webpack://scoreminos/./src/scripts/05-widgets/controllers/PointCollectionController.ts","webpack://scoreminos/./src/scripts/05-widgets/controllers/PointLimitController.ts","webpack://scoreminos/./src/scripts/04-components/CheckboxGroup.ts","webpack://scoreminos/./src/scripts/04-components/TurnInput/TurnInput.ts","webpack://scoreminos/./src/scripts/05-widgets/controllers/RoundController.ts","webpack://scoreminos/./src/scripts/03-modules/leaderboard.ts","webpack://scoreminos/./src/scripts/05-widgets/controllers/LeaderboardController.ts","webpack://scoreminos/./src/scripts/05-widgets/controllers/LeaderboardFlyOutController.ts","webpack://scoreminos/./src/scripts/04-components/TimedButton.ts","webpack://scoreminos/./src/scripts/main.ts"],"names":["NavigationManager","steps","config","this","setup","findIndex","step","id","activeStepId","setVisibility","onInstanceActivated","call","instance","instanceFactory","firstStep","activateStep","isVisible","getInstance","activeIndex","undefined","deactivateStep","length","find","bind","target","propertyKey","descriptor","value","TypeError","configurable","get","bound","Object","defineProperty","writable","Player","name","tileCount","_id","Symbol","_tiles","_score","count","delta","TurnType","Shape","singletonEnforcer","PlayerManager","enforcer","_instance","createPlayerSummary","_activePlayer","player","_players","reduce","result","score","map","hasEmptyHand","isActive","players","names","initialTileCount","tilesPerRound","forEach","setTileCount","updateScore","updateTileCount","initialTiles","shapeBonus","Bridge","DoubleSided","Hexagon","dummyWinner","points","Infinity","calculateScore","turn","turnType","Default","tilesDrawn","shape","passPenalty","completedShape","scoreDefaultTurn","RoundStart","isTriple","scoreRoundStart","calculateTileDelta","baseSelector","cssClass","selector","closeTrigger","container","portal","Dialog","hideDialog","querySelector","addEventListener","onClose","content","placeholders","keys","element","textContent","template","document","getElementById","firstElementChild","cloneNode","classList","remove","removeChild","closeCallback","options","getDialogContent","fillPlaceholders","appendChild","bindCloseEvent","onBeforeShow","add","classByPredicate","predicate","manipulation","subtitle","title","Header","base","_subtitle","updateSubtitle","_title","hasSubtitle","buttonPrimary","buttonSecondary","Footer","bindEvents","primaryButton","onPrimaryButtonClicked","secondaryButton","onSecondaryButtonClicked","event","onPerformPrimaryAction","onPerformSecondaryAction","disabled","BaseController","setupBase","hidden","footer","secondaryTitle","headerBase","headerBaseSelector","footerBase","footerBaseSelector","header","onPrimaryAction","onSecondaryAction","PlayerInput","getPlayerNames","inputs","querySelectorAll","Array","from","input","trim","filter","defaultConfig","messageSelector","scrollToVisible","updateMessageVisibility","scope","visibleIds","configuration","messages","message","includes","firstMessage","scrollIntoView","behavior","GameStartController","playerNames","playerInput","isValid","updateWarningVisibility","onPlayersSelected","playerInputBase","playerInputSelector","hide","warningId","PlayerSelectController","_round","Number","isFinite","updateHeader","onCancel","selectedPlayer","getSelectedPlayer","onPlayerSelected","selectedInput","summary","listElement","selectors","nameList","innerHTML","renderPlayer","join","round","index","renderPlayersList","FlyOut","contains","onShown","onHidden","onTransitionEnd","attributeName","button","NumberPad","callback","_value","parseInt","toString","onClick","closest","hasAttribute","processAction","getAttribute","processValue","selectedAction","slice","reset","NumberEntry","numberPad","showPoints","onPointsChanged","display","numberPadBase","defaultPoints","attribute","PointCollectionController","playerId","numberEntry","primaryEnabled","flyIn","show","translations","headerPrompt","getPlayersWithoutPoints","onPointsCollected","playerList","flyInBase","flyOut","numberEntryBase","setPointsButton","setPoints","onSetPoints","onClicked","PointLimitController","pointsValidation","setLimit","minimum","maximum","onLimitSet","CheckboxGroup","selectedCheckbox","onCheckboxSelected","checkbox","checked","selectedValue","initialCheckbox","RoundCompletedReason","RoundType","form","playedTriple","playedTripleContainer","TurnInput","convertInputToObject","_turnType","newState","updateVisualState","hasPlayedTriple","playerManager","RoundController","_roundType","turnInput","Collection","processPlayerInput","onShowLeaderboard","activePlayer","activateNextPlayer","passedTurnsStreak","maxPassedTurnStreak","goToNextPlayer","onRoundCompleted","RoundLocked","roundType","RoundWon","turnSummary","scoreDelta","tileDelta","scoreTurn","updateActivePlayerScore","updateActivePlayerTileCount","onTurnSubmitted","processPassedTurn","processPlayedTurn","turnBase","leaderboard","startingPlayerId","setActivePlayer","medals","createBody","includeTiles","ranking","temp","sort","a","b","rankPlayers","rows","place","medal","createLeaderboard","LeaderboardController","onStartNewGame","board","LeaderboardFlyOutController","flyOutController","setTimeout","StepId","TimedButton","onTimeOut","propertyName","leaderboardFlyoutBase","limitReached","pointsLimit","roundReason","startingPlayer","dialog","navigationManager","Names","PointsLimit","PlayerSelect","Round","Leaderboard","initLeaderboardController","initGameStartController","onStartingPlayerSecondaryAction","onStartingPlayerSelected","initPlayerSelectController","onPointLimitSet","initPointLimitController","leaderBoardFlyOut","showLeaderboard","flyOutClose","initRoundController","setPlayers","secondaryActionTitle","isFirstRound","start","goBack","playerCount","correctedIndex","Math","min","max","createPlayers","goForward","winner","remainingPoints","entry","total","awardRemainingPoints","updatePlayerScore","showDialog","showGameWinnerDialog","goTo","showRoundWinnerDialog","resetTileCount","canShowLimitDialog","showLastRoundDialog","formattedDelta","timedButton","showTurnPlayedDialog","firstRankedPlayer","limit"],"mappings":"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","file":"js/main.0660732a.js","sourcesContent":["import { BaseController } from '04-components/BaseController';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tinstanceFactory: (id: string) => BaseController | null;\r\n\tonInstanceActivated: (step: Step) => void;\r\n}\r\n\r\nexport interface Step {\r\n\tid: string;\r\n\tinstance?: BaseController;\r\n}\r\n\r\n/* == CLASS ================================================================= */\r\nexport class NavigationManager {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(private steps: Step[], private config: Configuration) {\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate activeStepId: string;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tprivate get activeIndex(): number | undefined {\r\n\t\treturn this.steps?.findIndex(step => step.id === this.activeStepId);\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate activateStep(step: Step): void {\r\n\t\tthis.setVisibility(step, true);\r\n\t\tthis.activeStepId = step.id;\r\n\t\tthis.config.onInstanceActivated?.call(this, step);\r\n\t}\r\n\r\n\tprivate deactivateStep(step: Step): void {\r\n\t\tthis.setVisibility(step, false);\r\n\t}\r\n\r\n\tprivate getInstance(step: Step): BaseController {\r\n\t\tif (!step.instance) {\r\n\t\t\tstep.instance = this.config.instanceFactory(step.id);\r\n\t\t}\r\n\r\n\t\treturn step.instance;\r\n\t}\r\n\r\n\tprivate setup() {\r\n\t\tconst [firstStep] = this.steps;\r\n\t\tthis.activateStep(firstStep);\r\n\t}\r\n\r\n\tprivate setVisibility(step: Step, isVisible: boolean): boolean {\r\n\t\tconst instance = this.getInstance(step);\r\n\t\tif (!instance) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tinstance.isVisible = isVisible;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tgoBack(): void {\r\n\t\tconst activeIndex = this.activeIndex;\r\n\t\tif (activeIndex === undefined || activeIndex === 0) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.deactivateStep(this.steps[activeIndex]);\r\n\t\tthis.activateStep(this.steps[activeIndex - 1]);\r\n\t}\r\n\r\n\tgoForward(): void {\r\n\t\tconst activeIndex = this.activeIndex;\r\n\t\tif (activeIndex === undefined || activeIndex === this.steps.length - 11) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.deactivateStep(this.steps[activeIndex]);\r\n\t\tthis.activateStep(this.steps[activeIndex + 1]);\r\n\t}\r\n\r\n\tgoTo(id: string): void {\r\n\t\tconst step = this.steps.find(step => step.id === id);\r\n\t\tif (step === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.deactivateStep(this.steps[this.activeIndex]);\r\n\t\tthis.activateStep(step);\r\n\t}\r\n}\r\n","/* eslint-disable @typescript-eslint/ban-types */\r\n\r\n/*\r\n |------------------------------------------------------------------------------\r\n | Bind context decorator\r\n |------------------------------------------------------------------------------\r\n |\r\n | Can be used to bind the this value of a property or method to the class\r\n | in which it is defined.\r\n |\r\n | Source: https://www.npmjs.com/package/bind-decorator\r\n |\r\n */\r\n\r\nexport function bind<T extends Function>(\r\n\ttarget: object,\r\n\tpropertyKey: string,\r\n\tdescriptor: TypedPropertyDescriptor<T>\r\n): TypedPropertyDescriptor<T> | void {\r\n\tif (!descriptor || typeof descriptor.value !== 'function') {\r\n\t\tthrow new TypeError(\r\n\t\t\t`Only methods can be decorated with @bind. <${propertyKey}> is not a method!`\r\n\t\t);\r\n\t}\r\n\r\n\treturn {\r\n\t\tconfigurable: true,\r\n\t\tget(this: T): T {\r\n\t\t\tconst bound: T = descriptor.value?.bind(this);\r\n\t\t\t// Credits to https://github.com/andreypopp/autobind-decorator for\r\n\t\t\t// memoizing the result of bind against a symbol on the instance.\r\n\t\t\tObject.defineProperty(this, propertyKey, {\r\n\t\t\t\tvalue: bound,\r\n\t\t\t\tconfigurable: true,\r\n\t\t\t\twritable: true\r\n\t\t\t});\r\n\r\n\t\t\treturn bound;\r\n\t\t}\r\n\t};\r\n}\r\n","/* == PRIVATE FIELDS ======================================================== */\r\nlet id = 0;\r\n\r\n/* == CLASS ================================================================= */\r\nexport class Player {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(public name: string, tileCount: number) {\r\n\t\tthis._id = Symbol(`player__${id++}`);\r\n\t\tthis._tiles = tileCount;\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate _id: symbol;\r\n\tprivate _score = 0;\r\n\tprivate _tiles: number;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget hasEmptyHand(): boolean {\r\n\t\treturn this._tiles === 0;\r\n\t}\r\n\r\n\tget id(): symbol {\r\n\t\treturn this._id;\r\n\t}\r\n\r\n\tget score(): number {\r\n\t\treturn this._score;\r\n\t}\r\n\r\n\tget tileCount(): number {\r\n\t\treturn this._tiles;\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tsetTileCount(count: number): void {\r\n\t\tthis._tiles = count;\r\n\t}\r\n\r\n\tupdateScore(delta: number): number {\r\n\t\tthis._score += delta;\r\n\r\n\t\treturn this._score;\r\n\t}\r\n\r\n\tupdateTileCount(delta: number): number {\r\n\t\tthis._tiles += delta;\r\n\r\n\t\treturn this._tiles;\r\n\t}\r\n}\r\n","import { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { bind } from '02-utilities/decorators/bind';\r\nimport { Player } from './Player';\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst singletonEnforcer = Symbol('singleton');\r\n\r\n/* == CLASS ================================================================= */\r\nexport class PlayerManager {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(enforcer: symbol) {\r\n\t\tif (enforcer !== singletonEnforcer) {\r\n\t\t\tthrow 'Use the static property instance to get the PlayerManager';\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- SINGLETON --------------------------------------------------------- */\r\n\tprivate static _instance: PlayerManager | null = null;\r\n\tstatic get instance(): PlayerManager {\r\n\t\tif (PlayerManager._instance === null) {\r\n\t\t\tPlayerManager._instance = new PlayerManager(singletonEnforcer);\r\n\t\t}\r\n\r\n\t\treturn PlayerManager._instance;\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate activeIndex: number | null = null;\r\n\tprivate _activePlayer: Player | null = null;\r\n\tprivate tilesPerRound: number | undefined;\r\n\tprivate _players: Player[] = [];\r\n\r\n\tget activePlayer(): PlayerSummary {\r\n\t\treturn this.createPlayerSummary(this._activePlayer);\r\n\t}\r\n\r\n\tget firstRankedPlayer(): PlayerSummary {\r\n\t\tconst player = this._players.reduce(\r\n\t\t\t(result, player) => {\r\n\t\t\t\treturn player.score > result.score ? player : result;\r\n\t\t\t},\r\n\t\t\t{ score: -Infinity } as Player\r\n\t\t);\r\n\r\n\t\treturn this.createPlayerSummary(player);\r\n\t}\r\n\r\n\tget players(): PlayerSummary[] {\r\n\t\treturn this._players.map(this.createPlayerSummary);\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\t@bind\r\n\tprivate createPlayerSummary(player: Player): PlayerSummary {\r\n\t\treturn {\r\n\t\t\thasEmptyHand: player.hasEmptyHand,\r\n\t\t\tid: player.id,\r\n\t\t\tisActive: this._activePlayer?.id === player.id,\r\n\t\t\tname: player.name,\r\n\t\t\tscore: player.score,\r\n\t\t\ttileCount: player.tileCount\r\n\t\t};\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tactivateNextPlayer(): PlayerSummary {\r\n\t\tthis.activeIndex = (this.activeIndex + 1) % this._players.length;\r\n\t\tthis._activePlayer = this._players[this.activeIndex];\r\n\r\n\t\treturn this.players[this.activeIndex];\r\n\t}\r\n\r\n\tcreatePlayers(names: Player['name'][], initialTileCount: number): void {\r\n\t\tthis.activeIndex = null;\r\n\t\tthis._activePlayer = null;\r\n\t\tthis.tilesPerRound = initialTileCount;\r\n\r\n\t\tthis._players = names.map(name => new Player(name, initialTileCount));\r\n\t}\r\n\r\n\tsetActivePlayer(id: Player['id']): PlayerSummary {\r\n\t\tthis.activeIndex = this._players.findIndex(player => player.id === id);\r\n\t\tthis._activePlayer = this._players[this.activeIndex];\r\n\r\n\t\treturn this.players[this.activeIndex];\r\n\t}\r\n\r\n\tresetTileCount(): void {\r\n\t\tthis._players.forEach(player => player.setTileCount(this.tilesPerRound ?? 0));\r\n\t}\r\n\r\n\tupdateActivePlayerScore(delta: number): number {\r\n\t\treturn this._activePlayer?.updateScore(delta) ?? 0;\r\n\t}\r\n\r\n\tupdateActivePlayerTileCount(delta: number): number {\r\n\t\treturn this._activePlayer?.updateTileCount(delta) ?? 0;\r\n\t}\r\n\r\n\tupdatePlayerScore(id: Player['id'], delta: number): number {\r\n\t\tconst player = this._players.find(player => player.id === id);\r\n\r\n\t\treturn player?.updateScore(delta) ?? 0;\r\n\t}\r\n}\r\n","export enum TurnType {\r\n\t/**\r\n\t * The default state is for a regular turn. It allows the user to specify\r\n\t * the number of points played as well as how many tiles were drawn and if\r\n\t * a special shape has been completed in the turn.\r\n\t */\r\n\tDefault = 'default',\r\n\r\n\t/**\r\n\t * In the collection state all controls except the number pad will be\r\n\t * hidden. It is meant to collect the points each player has left at the\r\n\t * end of a round so the points can be added to the score of the winner.\r\n\t */\r\n\tCollection = 'collection',\r\n\r\n\t/**\r\n\t * In the round start only the number pad and the control to indicate a trio\r\n\t * has been played will be displayed.\r\n\t */\r\n\tRoundStart = 'round-start'\r\n}\r\n\r\nexport enum Shape {\r\n\tBridge = 'bridge',\r\n\tDoubleSided = 'double-sided',\r\n\tHexagon = 'hexagon'\r\n}\r\n","import { Shape } from '01-global/enum';\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst tileDrawPenalty = -5;\r\nconst initialTiles = [\r\n\t9, // 2\r\n\t7, // 3\r\n\t7, // 4\r\n\t6, // 5\r\n\t6 // 6\r\n];\r\nconst roundBonus = 25;\r\nconst shapeBonus = {\r\n\t[Shape.Bridge]: 40,\r\n\t[Shape.DoubleSided]: 40,\r\n\t[Shape.Hexagon]: 50\r\n};\r\nconst passPenalty = -10;\r\n\r\n/* == PUBLIC METHODS ======================================================== */\r\nexport function getDrawnTilesPenalty(tilesDrawn?: number): number {\r\n\treturn (tilesDrawn ?? 0) * tileDrawPenalty;\r\n}\r\n\r\nexport function getInitialTileCount(playerCount: number): number {\r\n\tconst correctedIndex = Math.min(Math.max(0, playerCount - 2), 4);\r\n\r\n\treturn initialTiles[correctedIndex];\r\n}\r\n\r\nexport function getOpeningBonus(playedPoints: number): number {\r\n\treturn playedPoints === 0 ? 40 : 10;\r\n}\r\n\r\nexport function getRoundBonus(): number {\r\n\treturn roundBonus;\r\n}\r\n\r\nexport function getPassPenalty(): number {\r\n\treturn passPenalty;\r\n}\r\n\r\nexport function getShapeBonus(shape?: Shape): number {\r\n\treturn shapeBonus[shape] ?? 0;\r\n}\r\n","import { Turn } from '01-global/interfaces/Turn';\r\nimport { TurnType } from '01-global/enum';\r\nimport {\r\n\tgetDrawnTilesPenalty,\r\n\tgetOpeningBonus,\r\n\tgetPassPenalty,\r\n\tgetRoundBonus,\r\n\tgetShapeBonus\r\n} from './rules';\r\nimport { PlayerPoints } from '01-global/interfaces/PlayerPoints';\r\nimport { TurnSummary } from '01-global/interfaces/TurnSummary';\r\nimport { RemainingPoints } from '01-global/interfaces/RemainingPoints';\r\nimport { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst dummyWinner: RemainingPoints = {\r\n\tid: Symbol('dummy'),\r\n\tpoints: Infinity\r\n};\r\n\r\n/* == PRIVATE METHODS ======================================================= */\r\nfunction calculateScore(turn: Turn): number {\r\n\tswitch (turn.turnType) {\r\n\t\tcase TurnType.Default:\r\n\t\t\treturn scoreDefaultTurn(turn);\r\n\r\n\t\tcase TurnType.RoundStart:\r\n\t\t\treturn scoreRoundStart(turn);\r\n\r\n\t\tdefault:\r\n\t\t\treturn 0;\r\n\t}\r\n}\r\n\r\nfunction calculateTileDelta(turn: Turn): number {\r\n\tconst tilePlayed = turn.points === undefined ? 0 : -1;\r\n\r\n\treturn tilePlayed + (turn.tilesDrawn ?? 0);\r\n}\r\n\r\nfunction scoreDefaultTurn(turn: Turn): number {\r\n\tconst passPenalty = turn.points === undefined ? getPassPenalty() : 0;\r\n\r\n\treturn (\r\n\t\t(turn.points ?? 0) +\r\n\t\tgetShapeBonus(turn.completedShape) +\r\n\t\tgetDrawnTilesPenalty(turn.tilesDrawn) +\r\n\t\tpassPenalty\r\n\t);\r\n}\r\n\r\nfunction scoreRoundStart(turn: Turn): number {\r\n\tconst points = turn.points ?? 0;\r\n\tconst bonusPoints = turn.isTriple ? getOpeningBonus(points) : 0;\r\n\r\n\treturn points + bonusPoints;\r\n}\r\n\r\n/* == PUBLIC METHODS ======================================================== */\r\nexport function awardRemainingPoints(\r\n\tremainingPoints: RemainingPoints[]\r\n): RemainingPoints {\r\n\t// The winner is the player with the least remaining points.\r\n\tconst winner = remainingPoints.reduce((winner, entry) => {\r\n\t\treturn entry.points < winner.points ? entry : winner;\r\n\t}, dummyWinner);\r\n\r\n\tconst remainingPlayers = remainingPoints.filter(\r\n\t\tentry => entry.id !== winner.id\r\n\t);\r\n\tconst points = remainingPlayers.reduce(\r\n\t\t(total, entry) => total + entry.points,\r\n\t\t0\r\n\t);\r\n\r\n\treturn {\r\n\t\tid: winner.id,\r\n\t\tpoints: points - winner.points\r\n\t};\r\n}\r\n\r\nexport function rankPlayers(players: PlayerSummary[]): PlayerSummary['id'][] {\r\n\tconst temp = [...players];\r\n\ttemp.sort((a, b) => b.score - a.score);\r\n\r\n\treturn temp.map(player => player.id);\r\n}\r\n\r\nexport function scoreLockedRound(\r\n\tpointsPerPlayer: PlayerPoints[]\r\n): PlayerPoints {\r\n\tconst winner = pointsPerPlayer.reduce((winner, player) => {\r\n\t\treturn player.points < winner.points ? player : winner;\r\n\t}, dummyWinner);\r\n\tconst points = pointsPerPlayer\r\n\t\t.filter(player => player.id !== winner.id)\r\n\t\t.reduce((total, player) => total + player.points, 0);\r\n\r\n\treturn {\r\n\t\tid: winner.id,\r\n\t\tpoints: points - winner.points\r\n\t};\r\n}\r\n\r\nexport function scoreTurn(turn: Turn): TurnSummary {\r\n\treturn {\r\n\t\tscoreDelta: calculateScore(turn),\r\n\t\ttileDelta: calculateTileDelta(turn)\r\n\t};\r\n}\r\n\r\nexport function scoreWonRound(pointsPerPlayer: PlayerPoints[]): number {\r\n\treturn (\r\n\t\tpointsPerPlayer.reduce((total, player) => total + player.points, 0) +\r\n\t\tgetRoundBonus()\r\n\t);\r\n}\r\n","import { bind } from '02-utilities/decorators/bind';\r\n\r\n/* == INTERFACES ============================================================ */\r\ntype BeforeShow = (content: HTMLElement) => void;\r\n\r\ninterface Placeholder {\r\n\t[name: string]: string;\r\n}\r\n\r\ninterface ShowOptions {\r\n\tonBeforeShow?: BeforeShow;\r\n\tonClose?: () => void;\r\n\tplaceholders?: Placeholder;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst moduleName = 'dialog';\r\nconst baseSelector = `.js-${moduleName}`;\r\n\r\nconst cssClass = {\r\n\tisVisible: 'is-visible'\r\n};\r\n\r\nconst selector = {\r\n\tcloseTrigger: `${baseSelector}__close`,\r\n\tcontainer: `${baseSelector}__container`,\r\n\tportal: '#dialog-portal'\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class Dialog {\r\n\tconstructor() {\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate container: HTMLElement;\r\n\tprivate closeCallback: () => void;\r\n\tprivate portal: HTMLElement;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget dialogContent(): HTMLElement {\r\n\t\treturn this.container;\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\t@bind\r\n\tprivate onClose(): void {\r\n\t\tthis.hideDialog();\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate bindCloseEvent(): void {\r\n\t\tconst closeTrigger = this.container?.querySelector(selector.closeTrigger);\r\n\t\tcloseTrigger?.addEventListener('click', this.onClose);\r\n\t}\r\n\r\n\tprivate fillPlaceholders(\r\n\t\tcontent: HTMLElement,\r\n\t\tplaceholders: Placeholder\r\n\t): void {\r\n\t\tObject.keys(placeholders).forEach(id => {\r\n\t\t\tconst element = content.querySelector(`[data-placeholder=\"${id}\"]`);\r\n\t\t\tif (element !== null) {\r\n\t\t\t\telement.textContent = placeholders[id];\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tprivate getDialogContent(id: string): HTMLElement | null {\r\n\t\tconst template = document.getElementById(\r\n\t\t\t`dialog-${id}`\r\n\t\t) as HTMLTemplateElement;\r\n\r\n\t\treturn (\r\n\t\t\t(template?.content.firstElementChild.cloneNode(true) as HTMLElement) ?? null\r\n\t\t);\r\n\t}\r\n\r\n\tprivate setup() {\r\n\t\tthis.portal = document.querySelector(selector.portal);\r\n\t\tthis.container = this.portal?.querySelector(selector.container);\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\thideDialog(): void {\r\n\t\tthis.portal.classList.remove(cssClass.isVisible);\r\n\t\tthis.container.removeChild(this.container.firstElementChild);\r\n\t\tthis.closeCallback?.();\r\n\t\tthis.closeCallback = null;\r\n\t}\r\n\r\n\tshowDialog(id: string, options: ShowOptions): void {\r\n\t\tthis.closeCallback = options.onClose;\r\n\r\n\t\tconst content = this.getDialogContent(id);\r\n\t\tif (options.placeholders) {\r\n\t\t\tthis.fillPlaceholders(content, options.placeholders);\r\n\t\t}\r\n\r\n\t\tthis.container.appendChild(content);\r\n\t\tthis.bindCloseEvent();\r\n\t\toptions.onBeforeShow?.(this.container);\r\n\r\n\t\tthis.portal.classList.add(cssClass.isVisible);\r\n\t}\r\n}\r\n","/* == PUBLIC METHODS ======================================================== */\r\nexport function classByPredicate(\r\n\ttarget: HTMLElement,\r\n\tcssClass: string,\r\n\tpredicate: boolean\r\n): void {\r\n\tconst manipulation = predicate ? 'add' : 'remove';\r\n\ttarget.classList[manipulation](cssClass);\r\n}\r\n","import { classByPredicate } from '02-utilities/dom';\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst moduleName = 'header';\r\nconst baseSelector = `.js-${moduleName}`;\r\nconst cssClass = {\r\n\thasSubtitle: 'c-header--has-subtitle'\r\n};\r\nconst selector = {\r\n\tsubtitle: `${baseSelector}__subtitle`,\r\n\ttitle: `${baseSelector}__title`\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class Header {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement) {\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate _subtitle: HTMLElement;\r\n\tprivate _title: HTMLElement;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\t/* --[ HAS-SUBTITLE ]-- */\r\n\tget hasSubtitle(): boolean {\r\n\t\treturn this.subtitle !== undefined;\r\n\t}\r\n\r\n\t/* --[ SUBTITLE ]-- */\r\n\tget subtitle(): string | undefined {\r\n\t\tconst subtitle = this._subtitle?.textContent;\r\n\r\n\t\treturn subtitle === '' ? undefined : subtitle;\r\n\t}\r\n\tset subtitle(value: string | undefined) {\r\n\t\tthis.updateSubtitle(value);\r\n\t}\r\n\r\n\t/* --[ TITLE ]-- */\r\n\tget title(): string {\r\n\t\treturn this._title?.textContent;\r\n\t}\r\n\tset title(value: string) {\r\n\t\tif (this._title !== null) {\r\n\t\t\tthis._title.textContent = value;\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tthis._subtitle = this.base.querySelector(selector.subtitle);\r\n\t\tthis._title = this.base.querySelector(selector.title);\r\n\r\n\t\tclassByPredicate(this.base, cssClass.hasSubtitle, this.hasSubtitle);\r\n\t}\r\n\r\n\tprivate updateSubtitle(subtitle: string | undefined): void {\r\n\t\tif (this._subtitle === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._subtitle.textContent = subtitle ?? '';\r\n\t\tclassByPredicate(this.base, cssClass.hasSubtitle, this.hasSubtitle);\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tclearSubtitle(): void {\r\n\t\tthis.subtitle = undefined;\r\n\t}\r\n}\r\n\r\n/* == EXPORTS =============================================================== */\r\nexport { baseSelector };\r\n","import { bind } from '02-utilities/decorators/bind';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tonPerformPrimaryAction?: () => void;\r\n\tonPerformSecondaryAction?: () => void;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst moduleName = 'footer';\r\nconst baseSelector = `.js-${moduleName}`;\r\nconst selector = {\r\n\tbuttonPrimary: `${baseSelector}__primary`,\r\n\tbuttonSecondary: `${baseSelector}__secondary`\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class Footer {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tthis.setup();\r\n\t\tthis.bindEvents();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate primaryButton: HTMLButtonElement;\r\n\tprivate secondaryButton: HTMLButtonElement;\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\tprivate bindEvents(): void {\r\n\t\tthis.primaryButton?.addEventListener('click', this.onPrimaryButtonClicked);\r\n\t\tthis.secondaryButton?.addEventListener(\r\n\t\t\t'click',\r\n\t\t\tthis.onSecondaryButtonClicked\r\n\t\t);\r\n\t}\r\n\r\n\t@bind\r\n\tprivate onPrimaryButtonClicked(event: Event): void {\r\n\t\tthis.config.onPerformPrimaryAction?.call(this);\r\n\t}\r\n\r\n\t@bind\r\n\tprivate onSecondaryButtonClicked(event: Event): void {\r\n\t\tthis.config.onPerformSecondaryAction?.call(this);\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tthis.primaryButton = this.base.querySelector(\r\n\t\t\tselector.buttonPrimary\r\n\t\t) as HTMLButtonElement;\r\n\t\tthis.secondaryButton = this.base.querySelector(\r\n\t\t\tselector.buttonSecondary\r\n\t\t) as HTMLButtonElement;\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tget primaryEnabled(): boolean {\r\n\t\treturn this.primaryButton?.disabled ?? false;\r\n\t}\r\n\tset primaryEnabled(value: boolean) {\r\n\t\tif (this.primaryButton === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.primaryButton.disabled = !value;\r\n\t}\r\n\r\n\tget secondaryEnabled(): boolean {\r\n\t\treturn this.secondaryButton?.disabled ?? false;\r\n\t}\r\n\tset secondaryEnabled(value: boolean) {\r\n\t\tif (this.secondaryButton === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.secondaryButton.disabled = !value;\r\n\t}\r\n\r\n\tget secondaryTitle(): string {\r\n\t\treturn this.secondaryButton?.textContent ?? '';\r\n\t}\r\n\tset secondaryTitle(value: string) {\r\n\t\tif (this.secondaryButton === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.secondaryButton.textContent = value;\r\n\t}\r\n}\r\n\r\n/* == EXPORTS =============================================================== */\r\nexport { baseSelector };\r\n","import {\r\n\tHeader,\r\n\tbaseSelector as headerBaseSelector\r\n} from '04-components/Header';\r\nimport {\r\n\tFooter,\r\n\tbaseSelector as footerBaseSelector\r\n} from '04-components/Footer';\r\n\r\n/* == CLASS ================================================================= */\r\nexport class BaseController {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement) {\r\n\t\tthis.setupBase();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprotected header: Header;\r\n\tprotected footer: Footer;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget isVisible(): boolean {\r\n\t\treturn !this.base.hidden;\r\n\t}\r\n\tset isVisible(value: boolean) {\r\n\t\tthis.base.hidden = !value;\r\n\t}\r\n\r\n\tget secondaryActionTitle(): string {\r\n\t\treturn this.footer.secondaryTitle;\r\n\t}\r\n\tset secondaryActionTitle(value: string) {\r\n\t\tthis.footer.secondaryTitle = value;\r\n\t}\r\n\r\n\t/* -- PROTECTED METHODS ------------------------------------------------- */\r\n\tprotected onSecondaryAction(): void {\r\n\t\t// noop'\r\n\t}\r\n\r\n\tprotected onPrimaryAction(): void {\r\n\t\t// noop'\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setupBase() {\r\n\t\tconst headerBase = this.base.querySelector(headerBaseSelector) as HTMLElement;\r\n\t\tconst footerBase = this.base.querySelector(footerBaseSelector) as HTMLElement;\r\n\r\n\t\tif (headerBase !== null) {\r\n\t\t\tthis.header = new Header(headerBase);\r\n\t\t}\r\n\r\n\t\tif (footerBase !== null) {\r\n\t\t\tthis.footer = new Footer(footerBase, {\r\n\t\t\t\tonPerformPrimaryAction: () => this.onPrimaryAction(),\r\n\t\t\t\tonPerformSecondaryAction: () => this.onSecondaryAction()\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n}\r\n","/* == CONSTANTS ============================================================= */\r\nconst moduleName = 'player-input';\r\nconst baseSelector = `.js-${moduleName}`;\r\nconst selector = {\r\n\tform: `${baseSelector}__form`,\r\n\tinput: 'input'\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class PlayerInput {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement) {\r\n\t\t//\r\n\t}\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget playerNames(): string[] {\r\n\t\treturn this.getPlayerNames();\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate getPlayerNames(): string[] {\r\n\t\tconst inputs = this.base.querySelectorAll(selector.input);\r\n\r\n\t\treturn (Array.from(inputs) as HTMLInputElement[])\r\n\t\t\t.map((input: HTMLInputElement) => input.value.trim())\r\n\t\t\t.filter(name => name !== '');\r\n\t}\r\n}\r\n\r\n/* == EXPORTS =============================================================== */\r\nexport { baseSelector };\r\n","/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tmessageSelector?: string;\r\n\tscrollToVisible?: boolean;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst defaultConfig: Configuration = {\r\n\tmessageSelector: '.js-message',\r\n\tscrollToVisible: true\r\n};\r\n\r\n/* == PUBLIC METHODS ======================================================== */\r\nexport function updateMessageVisibility(\r\n\tscope: HTMLElement,\r\n\tvisibleIds: string[],\r\n\tconfig?: Configuration\r\n): void {\r\n\tconst configuration = {\r\n\t\t...defaultConfig,\r\n\t\t...config\r\n\t};\r\n\tconst messages: HTMLElement[] = Array.from(\r\n\t\tscope.querySelectorAll(configuration.messageSelector)\r\n\t);\r\n\r\n\tmessages.forEach(message => {\r\n\t\tmessage.hidden = !visibleIds.includes(message.id);\r\n\t});\r\n\r\n\tif (!configuration.scrollToVisible) {\r\n\t\treturn;\r\n\t}\r\n\r\n\tconst firstMessage = messages.find(message => !message.hidden);\r\n\tfirstMessage?.scrollIntoView({\r\n\t\tbehavior: 'smooth'\r\n\t});\r\n}\r\n","import { BaseController } from '04-components/BaseController';\r\nimport {\r\n\tPlayerInput,\r\n\tbaseSelector as playerInputSelector\r\n} from '04-components/PlayerInput/PlayerInput';\r\nimport { updateMessageVisibility } from '03-modules/error-message';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Selectors {\r\n\tform: string;\r\n}\r\n\r\ninterface Configuration {\r\n\tonPlayersSelected: (names: string[]) => void;\r\n\tselectors: Selectors;\r\n\twarningId: string;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst minimumRequiredPlayers = 2;\r\n\r\n/* == CLASS ================================================================= */\r\nexport class GameStartController extends BaseController {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement, readonly config?: Configuration) {\r\n\t\tsuper(base);\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate playerInput: PlayerInput;\r\n\r\n\t/* -- PROTECTED METHODS ------------------------------------------------- */\r\n\tprotected onPrimaryAction(): void {\r\n\t\tconst playerNames = this.playerInput?.playerNames ?? [];\r\n\t\tconst isValid = playerNames.length >= minimumRequiredPlayers;\r\n\r\n\t\tthis.updateWarningVisibility(isValid);\r\n\r\n\t\tif (isValid) {\r\n\t\t\tthis.config.onPlayersSelected?.call(this, playerNames);\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tconst playerInputBase = this.base.querySelector(\r\n\t\t\tplayerInputSelector\r\n\t\t) as HTMLElement;\r\n\t\tif (playerInputBase) {\r\n\t\t\tthis.playerInput = new PlayerInput(playerInputBase);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateWarningVisibility(hide: boolean): void {\r\n\t\tconst visibleIds = hide ? [] : [this.config.warningId];\r\n\r\n\t\tupdateMessageVisibility(this.base, visibleIds);\r\n\t}\r\n}\r\n","import { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { updateMessageVisibility } from '03-modules/error-message';\r\nimport { BaseController } from '04-components/BaseController';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tisVisible: boolean;\r\n\tonCancel: () => void;\r\n\tonPlayerSelected: (player: PlayerSummary) => void;\r\n\tselectors: Selectors;\r\n\twarningId: string;\r\n}\r\n\r\ninterface Player {\r\n\tid: string;\r\n\tsummary: PlayerSummary;\r\n}\r\n\r\ninterface Selectors {\r\n\tnameList: string;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst selector = {\r\n\tselectedPlayer: 'input[type=\"radio\"]:checked'\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class PlayerSelectController extends BaseController {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tsuper(base);\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate players: Player[];\r\n\tprivate _round: number;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget round(): number {\r\n\t\treturn this._round;\r\n\t}\r\n\tset round(value: number) {\r\n\t\tif (value === this._round || !Number.isFinite(value)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._round = value;\r\n\t\tthis.updateHeader();\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\tprotected onSecondaryAction(): void {\r\n\t\tthis.config.onCancel?.call(this);\r\n\t}\r\n\r\n\tprotected onPrimaryAction(): void {\r\n\t\tconst selectedPlayer = this.getSelectedPlayer();\r\n\t\tconst isValid = selectedPlayer !== null;\r\n\r\n\t\tthis.updateWarningVisibility(isValid);\r\n\r\n\t\tif (isValid) {\r\n\t\t\tthis.config.onPlayerSelected?.call(this, selectedPlayer);\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate getSelectedPlayer(): PlayerSummary | null {\r\n\t\tconst selectedInput = this.base.querySelector(selector.selectedPlayer);\r\n\r\n\t\treturn selectedInput === null\r\n\t\t\t? null\r\n\t\t\t: this.players.find(player => player.id === selectedInput.id).summary;\r\n\t}\r\n\r\n\tprivate renderPlayer(player: Player): string {\r\n\t\treturn `<li class=\"c-radio-button\">\r\n\t\t\t<input class=\"c-radio-button__input\" type=\"radio\" name=\"player-select\" id=\"${player.id}\">\r\n\t\t\t<label for=\"${player.id}\" class=\"c-radio-button__button\">\r\n\t\t\t\t${player.summary.name}\r\n\t\t\t</label>\r\n\t\t</li>`;\r\n\t}\r\n\r\n\tprivate renderPlayersList(): void {\r\n\t\tconst listElement = this.base.querySelector(this.config.selectors.nameList);\r\n\t\tif (listElement === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlistElement.innerHTML = this.players\r\n\t\t\t.map(player => this.renderPlayer(player))\r\n\t\t\t.join('');\r\n\t}\r\n\r\n\tprivate setup(): void {\r\n\t\tthis.isVisible = this.config.isVisible;\r\n\t}\r\n\r\n\tprivate updateHeader(): void {\r\n\t\tthis.header.title = `Start Round ${this.round}`.trim();\r\n\t}\r\n\r\n\tprivate updateWarningVisibility(hide: boolean): void {\r\n\t\tconst visibleIds = hide ? [] : [this.config.warningId];\r\n\r\n\t\tupdateMessageVisibility(this.base, visibleIds);\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tsetPlayers(players: PlayerSummary[]): void {\r\n\t\tthis.players = players.map((player, index) => ({\r\n\t\t\tid: `player_${index}`,\r\n\t\t\tsummary: player\r\n\t\t}));\r\n\r\n\t\tthis.renderPlayersList();\r\n\t}\r\n}\r\n","import { bind } from '02-utilities/decorators/bind';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tonHidden?: () => void;\r\n\tonShown?: () => void;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst cssClass = {\r\n\tisVisible: 'is-visible'\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class FlyOut {\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tprivate get isVisible(): boolean {\r\n\t\treturn this.base.classList.contains(cssClass.isVisible);\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\t@bind\r\n\tprivate onTransitionEnd(event: TransitionEvent): void {\r\n\t\tif (this.isVisible) {\r\n\t\t\tthis.config.onShown?.();\r\n\t\t} else {\r\n\t\t\tthis.config.onHidden?.();\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tif (this.config.onHidden === undefined && this.config.onShown === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis.base.addEventListener('transitionend', this.onTransitionEnd);\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\thide(): void {\r\n\t\tthis.base.classList.remove(cssClass.isVisible);\r\n\t}\r\n\r\n\tshow(): void {\r\n\t\tthis.base.classList.add(cssClass.isVisible);\r\n\t}\r\n}\r\n","import { bind } from '02-utilities/decorators/bind';\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst moduleName = 'number-pad';\r\nconst baseSelector = `.js-${moduleName}`;\r\nconst defaultValue = '';\r\n\r\nconst action = {\r\n\tbackspace: 'backspace',\r\n\tclear: 'clear'\r\n};\r\n\r\nconst attributeName = {\r\n\taction: 'data-action',\r\n\tvalue: 'data-value'\r\n};\r\n\r\nconst selector = {\r\n\tbutton: `[${attributeName.action}], [${attributeName.value}]`\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class NumberPad {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(\r\n\t\treadonly base: HTMLElement,\r\n\t\tprivate callback?: (value: number | undefined) => void\r\n\t) {\r\n\t\tthis.bindEvents();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate _value: string = defaultValue;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget value(): number | undefined {\r\n\t\treturn this._value === '' ? undefined : parseInt(this._value, 10);\r\n\t}\r\n\tset value(value: number | undefined) {\r\n\t\t// @ts-ignore value can't be undefined as we check if it is finite.\r\n\t\tthis._value = Number.isFinite(value) ? value.toString() : '';\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\tprivate bindEvents(): void {\r\n\t\tthis.base.addEventListener('click', this.onClick);\r\n\t}\r\n\r\n\t@bind\r\n\tprivate onClick(event: Event): void {\r\n\t\tconst button = (event.target as HTMLElement).closest(selector.button);\r\n\t\tif (button === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst hasChanged = button.hasAttribute(attributeName.action)\r\n\t\t\t? this.processAction(button.getAttribute(attributeName.action))\r\n\t\t\t: this.processValue(button.getAttribute(attributeName.value));\r\n\r\n\t\tif (hasChanged && this.callback) {\r\n\t\t\tthis.callback(this.value);\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate processAction(selectedAction: string): boolean {\r\n\t\tif (this._value === '') {\r\n\t\t\treturn false;\r\n\t\t}\r\n\r\n\t\tswitch (selectedAction) {\r\n\t\t\tcase action.backspace:\r\n\t\t\t\tthis._value = this._value.slice(0, -1);\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tcase action.clear:\r\n\t\t\t\tthis.reset();\r\n\r\n\t\t\t\treturn true;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\treturn false;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate processValue(value: string): boolean {\r\n\t\tthis._value += value;\r\n\r\n\t\treturn true;\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\treset(): void {\r\n\t\tthis._value = defaultValue;\r\n\t}\r\n}\r\n\r\n/* == EXPORTS =============================================================== */\r\nexport { baseSelector };\r\n","import { bind } from '02-utilities/decorators/bind';\r\nimport { NumberPad } from '04-components/NumberPad';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tdefaultPoints?: number;\r\n\tonPointsChanged?: (value: number | undefined) => void;\r\n\tselectors: Selectors;\r\n}\r\n\r\ninterface Selectors {\r\n\tdisplay: string;\r\n\tnumberPad: string;\r\n}\r\n\r\n/* == CLASS ================================================================= */\r\nexport class NumberEntry {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement, private configuration: Configuration) {\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- PRIVATE FIELDS ---------------------------------------------------- */\r\n\tprivate display: HTMLElement | undefined;\r\n\tprivate numberPad: NumberPad | undefined;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget value(): number | undefined {\r\n\t\treturn this.numberPad?.value;\r\n\t}\r\n\tset value(value: number | undefined) {\r\n\t\tif (this.numberPad === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.numberPad.value = value;\r\n\t\tthis.showPoints(value);\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\t@bind\r\n\tprivate onPointsChanged(value: number | undefined): void {\r\n\t\tthis.showPoints(value);\r\n\t\tthis.configuration.onPointsChanged?.(value);\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tthis.display = this.base.querySelector(\r\n\t\t\tthis.configuration.selectors.display\r\n\t\t) as HTMLElement;\r\n\r\n\t\tconst numberPadBase = this.base.querySelector(\r\n\t\t\tthis.configuration.selectors.numberPad\r\n\t\t) as HTMLElement;\r\n\t\tif (numberPadBase !== null) {\r\n\t\t\tthis.numberPad = new NumberPad(numberPadBase, this.onPointsChanged);\r\n\t\t}\r\n\r\n\t\tthis.value = this.configuration.defaultPoints;\r\n\t}\r\n\r\n\tprivate showPoints(points: number | undefined): void {\r\n\t\tif (!this.display) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.display.textContent = points?.toString() ?? '--';\r\n\t}\r\n\r\n\t/* -- PULBIC METHODS ---------------------------------------------------- */\r\n\treset(): void {\r\n\t\tthis.value = this.configuration.defaultPoints;\r\n\t}\r\n}\r\n","/**\r\n * TODO:\r\n * - Restore header title after setting points\r\n * - Use NumberEntry\r\n */\r\n\r\nimport { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { RemainingPoints } from '01-global/interfaces/RemainingPoints';\r\nimport { bind } from '02-utilities/decorators/bind';\r\nimport { updateMessageVisibility } from '03-modules/error-message';\r\nimport { FlyOut } from '03-modules/fly-out';\r\nimport { BaseController } from '04-components/BaseController';\r\nimport { NumberEntry } from '04-components/NumberEntry';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tisVisible: boolean;\r\n\tonPointsCollected: (points: RemainingPoints[]) => void;\r\n\tselectors: Selectors;\r\n\ttranslations: {\r\n\t\theaderPrompt: string;\r\n\t};\r\n\twarningId: string;\r\n}\r\n\r\ninterface Player {\r\n\tid: string;\r\n\tpoints?: number;\r\n\tsummary: PlayerSummary;\r\n}\r\n\r\ninterface Selectors {\r\n\tflyOut: string;\r\n\tnumberEntry: string;\r\n\tplayerList: string;\r\n\tsetPoints: string;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst attribute = {\r\n\tid: 'data-id'\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class PointCollectionController extends BaseController {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tsuper(base);\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate flyIn: FlyOut;\r\n\tprivate numberEntry: NumberEntry;\r\n\tprivate players: Player[];\r\n\tprivate selectedPlayer: Player;\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\t@bind\r\n\tprivate onClicked(event: MouseEvent): void {\r\n\t\tconst playerId = (event.target as HTMLElement)\r\n\t\t\t.closest(`[${attribute.id}]:not(:disabled)`)\r\n\t\t\t?.getAttribute(attribute.id);\r\n\r\n\t\tif (playerId === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.selectedPlayer = this.players.find(player => player.id === playerId);\r\n\t\tif (this.selectedPlayer === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.numberEntry.value = this.selectedPlayer.points ?? 0;\r\n\r\n\t\tthis.header.title = this.selectedPlayer.summary.name;\r\n\t\tthis.footer.primaryEnabled = false;\r\n\t\tthis.flyIn?.show();\r\n\t}\r\n\r\n\t@bind\r\n\tprivate onSetPoints(): void {\r\n\t\tif (this.numberEntry.value !== 0) {\r\n\t\t\tthis.selectedPlayer.points = this.numberEntry.value;\r\n\t\t}\r\n\t\tthis.renderPlayersList();\r\n\t\tthis.flyIn?.hide();\r\n\t\tthis.header.title = this.config.translations.headerPrompt;\r\n\t\tthis.footer.primaryEnabled = true;\r\n\t}\r\n\r\n\tprotected onPrimaryAction(): void {\r\n\t\tconst invalidPlayers = this.getPlayersWithoutPoints();\r\n\t\tconst isValid = invalidPlayers.length === 0;\r\n\r\n\t\tthis.updateWarningVisibility(isValid);\r\n\r\n\t\tif (!isValid) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst result = this.players.map(({ points, summary: { id } }) => ({\r\n\t\t\tid,\r\n\t\t\tpoints\r\n\t\t}));\r\n\t\tthis.config.onPointsCollected?.(result);\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate getPlayersWithoutPoints(): Player[] {\r\n\t\treturn this.players.filter(({ points, summary: { hasEmptyHand } }) => {\r\n\t\t\treturn (points ?? 0) === 0 && !hasEmptyHand;\r\n\t\t});\r\n\t}\r\n\r\n\tprivate renderPlayer(player: Player): string {\r\n\t\tconst {\r\n\t\t\tid,\r\n\t\t\tpoints,\r\n\t\t\tsummary: { hasEmptyHand, name }\r\n\t\t} = player;\r\n\r\n\t\treturn `<li>\r\n\t\t\t<button\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tclass=\"o-structure o-structure--vertical-center c-score-button\"\r\n\t\t\t\tdata-id=\"${id}\"\r\n\t\t\t\t${hasEmptyHand ? 'disabled' : ''}\r\n\t\t\t>\r\n\t\t\t\t<p class=\"o-structure o-structure--vertical o-structure--grow\">\r\n\t\t\t\t\t<span class=\"c-score-button__name\">${name}</span>\r\n\t\t\t\t\t${hasEmptyHand ? '<span>Round winner</span>' : ''}\r\n\t\t\t\t\t${points === undefined ? '<span>No points set</span>' : ''}\r\n\t\t\t\t</p>\r\n\t\t\t\t${(points ?? 0) === 0 ? '' : `<p class=\"c-score-button__score\">${points}</p>`}\r\n\t\t\t\t${hasEmptyHand ? '' : '<p class=\"c-score-button__chevron\">❯</p>'}\r\n\t\t\t</button>\r\n\t\t</li>`;\r\n\t}\r\n\r\n\tprivate renderPlayersList(): void {\r\n\t\tconst listElement = this.base.querySelector(this.config.selectors.playerList);\r\n\t\tif (listElement === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlistElement.innerHTML = this.players\r\n\t\t\t.map(player => this.renderPlayer(player))\r\n\t\t\t.join('');\r\n\t}\r\n\r\n\tprivate setup(): void {\r\n\t\tconst flyInBase = this.base.querySelector(\r\n\t\t\tthis.config.selectors.flyOut\r\n\t\t) as HTMLElement;\r\n\t\tif (flyInBase !== null) {\r\n\t\t\tthis.flyIn = new FlyOut(flyInBase);\r\n\t\t}\r\n\r\n\t\tconst numberEntryBase = this.base.querySelector(\r\n\t\t\tthis.config.selectors.numberEntry\r\n\t\t) as HTMLElement;\r\n\t\tif (numberEntryBase !== null) {\r\n\t\t\tthis.numberEntry = new NumberEntry(numberEntryBase, {\r\n\t\t\t\tdefaultPoints: 0,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tdisplay: '.js-number-entry__display',\r\n\t\t\t\t\tnumberPad: '.js-number-entry__number-pad'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tconst setPointsButton = this.base.querySelector(\r\n\t\t\tthis.config.selectors.setPoints\r\n\t\t);\r\n\t\tif (setPointsButton !== null) {\r\n\t\t\tsetPointsButton.addEventListener('click', this.onSetPoints);\r\n\t\t}\r\n\t\tthis.base.addEventListener('click', this.onClicked);\r\n\t\tthis.isVisible = this.config.isVisible;\r\n\t}\r\n\r\n\tprivate updateWarningVisibility(hide: boolean): void {\r\n\t\tconst visibleIds = hide ? [] : [this.config.warningId];\r\n\r\n\t\tupdateMessageVisibility(this.base, visibleIds);\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tsetPlayers(players: PlayerSummary[]): void {\r\n\t\tthis.players = players.map((player, index) => ({\r\n\t\t\tid: `player_${index}`,\r\n\t\t\tpoints: player.hasEmptyHand ? 0 : undefined,\r\n\t\t\tsummary: player\r\n\t\t}));\r\n\r\n\t\tthis.renderPlayersList();\r\n\t}\r\n}\r\n","import { updateMessageVisibility } from '03-modules/error-message';\r\nimport { BaseController } from '04-components/BaseController';\r\nimport { NumberEntry } from '04-components/NumberEntry';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tdefaultPoints: number;\r\n\tisVisible: boolean;\r\n\tonCancel: () => void;\r\n\tonLimitSet: (points: number) => void;\r\n\tpointsValidation: PointsValidation;\r\n\tselectors: Selectors;\r\n}\r\n\r\ninterface PointsValidation {\r\n\tmaximum: number;\r\n\tminimum: number;\r\n\twarningId: string;\r\n}\r\n\r\ninterface Selectors {\r\n\tnumberEntry: string;\r\n}\r\n\r\n/* == CLASS ================================================================= */\r\nexport class PointLimitController extends BaseController {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tsuper(base);\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------- */\r\n\tprivate numberEntry: NumberEntry;\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\tprotected onSecondaryAction(): void {\r\n\t\tthis.config.onCancel?.call(this);\r\n\t}\r\n\r\n\tprotected onPrimaryAction(): void {\r\n\t\tconst { pointsValidation } = this.config;\r\n\t\t// setLimit = this.numberPad.value,\r\n\t\tconst setLimit = this.numberEntry.value;\r\n\t\tconst isValid: boolean =\r\n\t\t\tsetLimit >= pointsValidation.minimum && setLimit <= pointsValidation.maximum;\r\n\r\n\t\tthis.updateWarningVisibility(isValid);\r\n\r\n\t\tif (isValid) {\r\n\t\t\tthis.config.onLimitSet?.call(this, setLimit);\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tthis.isVisible = this.config.isVisible;\r\n\r\n\t\tconst numberEntryBase = this.base.querySelector(\r\n\t\t\tthis.config.selectors.numberEntry\r\n\t\t) as HTMLElement;\r\n\t\tif (numberEntryBase !== null) {\r\n\t\t\tthis.numberEntry = new NumberEntry(numberEntryBase, {\r\n\t\t\t\tdefaultPoints: this.config.defaultPoints,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tdisplay: '.js-number-entry__display',\r\n\t\t\t\t\tnumberPad: '.js-number-entry__number-pad'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tprivate updateWarningVisibility(hide: boolean): void {\r\n\t\tconst visibleIds = hide ? [] : [this.config.pointsValidation.warningId];\r\n\r\n\t\tupdateMessageVisibility(this.base, visibleIds);\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\treset(): void {\r\n\t\tthis.numberEntry?.reset();\r\n\t}\r\n}\r\n","import { bind } from '02-utilities/decorators/bind';\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst moduleName = 'checkbox-group';\r\nconst baseSelector = `.js-${moduleName}`;\r\nconst selector = {\r\n\tselectedInput: 'input:checked'\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class CheckboxGroup {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(\r\n\t\treadonly base: HTMLElement,\r\n\t\tprivate callback?: (value: string | undefined) => void\r\n\t) {\r\n\t\tthis.bindEvents();\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate initialCheckbox: HTMLInputElement;\r\n\tprivate selectedCheckbox: HTMLInputElement;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tget selectedValue(): string | undefined {\r\n\t\treturn this.selectedCheckbox?.value ?? undefined;\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\tprivate bindEvents(): void {\r\n\t\tthis.base.addEventListener('change', this.onCheckboxSelected);\r\n\t}\r\n\r\n\t@bind\r\n\tprivate onCheckboxSelected(event: Event): void {\r\n\t\tconst checkbox = event.target as HTMLInputElement;\r\n\r\n\t\tif (checkbox.checked && this.selectedCheckbox) {\r\n\t\t\tthis.selectedCheckbox.checked = false;\r\n\t\t}\r\n\r\n\t\tthis.selectedCheckbox = checkbox.checked ? checkbox : null;\r\n\r\n\t\tif (this.callback) {\r\n\t\t\tthis.callback(this.selectedValue);\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tthis.initialCheckbox = this.base.querySelector(selector.selectedInput);\r\n\t\tthis.selectedCheckbox = this.initialCheckbox;\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\treset(): void {\r\n\t\tif (this.selectedCheckbox === this.initialCheckbox) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (this.selectedCheckbox) {\r\n\t\t\tthis.selectedCheckbox.checked = false;\r\n\t\t}\r\n\r\n\t\tthis.selectedCheckbox = this.initialCheckbox;\r\n\r\n\t\tif (this.selectedCheckbox) {\r\n\t\t\tthis.selectedCheckbox.checked = true;\r\n\t\t}\r\n\t}\r\n}\r\n\r\n/* == EXPORTS =============================================================== */\r\nexport { baseSelector };\r\n","import { Shape, TurnType } from '01-global/enum';\r\nimport { Turn } from '01-global/interfaces/Turn';\r\nimport { bind } from '02-utilities/decorators/bind';\r\nimport { CheckboxGroup } from '04-components/CheckboxGroup';\r\nimport { NumberEntry } from '04-components/NumberEntry';\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst moduleName = 'turn-input';\r\nconst baseSelector = `.js-${moduleName}`;\r\nconst selector = {\r\n\tcompletedShape: `${baseSelector}__completed-shape`,\r\n\tform: `${baseSelector}__form`,\r\n\tnumberEntry: `${baseSelector}__number-entry`,\r\n\tplayedTriple: `${baseSelector}__played-triple`,\r\n\tplayedTripleContainer: `${baseSelector}__played-triple-container`,\r\n\ttilesDrawn: `${baseSelector}__drawn-tiles`\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class TurnInput {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(private base: HTMLElement) {\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate completedShape: CheckboxGroup;\r\n\tprivate numberEntry: NumberEntry;\r\n\tprivate _turnType = TurnType.Default;\r\n\tprivate tilesDrawn: CheckboxGroup;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\r\n\t/* --[ HAS-PLAYED-TRIPLE ]-- */\r\n\tprivate get hasPlayedTriple(): boolean {\r\n\t\tconst element = this.base.querySelector(\r\n\t\t\tselector.playedTriple\r\n\t\t) as HTMLInputElement;\r\n\r\n\t\treturn element === null ? false : !element.disabled && element.checked;\r\n\t}\r\n\r\n\t/* --[ TURN ]-- */\r\n\tget turn(): Turn {\r\n\t\treturn this.convertInputToObject();\r\n\t}\r\n\r\n\t/* --[ TURN-TYPE ]-- */\r\n\tget turnType(): TurnType {\r\n\t\treturn this._turnType;\r\n\t}\r\n\tset turnType(newState: TurnType) {\r\n\t\tif (newState === this._turnType) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tthis._turnType = newState;\r\n\t\tthis.updateVisualState();\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\t@bind\r\n\tprivate onPointsChanged(value: number | undefined): void {\r\n\t\tif (this.turnType !== TurnType.RoundStart) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst element = this.base.querySelector(\r\n\t\t\tselector.playedTriple\r\n\t\t) as HTMLInputElement;\r\n\t\telement.disabled = (value ?? 0) % 3 !== 0;\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate convertInputToObject(): Turn {\r\n\t\tconst turn: Turn = {\r\n\t\t\tcompletedShape: this.completedShape.selectedValue as Shape,\r\n\t\t\tturnType: this._turnType\r\n\t\t};\r\n\r\n\t\tif (this.numberEntry.value !== undefined) {\r\n\t\t\tturn.points = this.numberEntry.value;\r\n\t\t}\r\n\r\n\t\tif (this.tilesDrawn.selectedValue) {\r\n\t\t\tturn.tilesDrawn = parseInt(this.tilesDrawn.selectedValue, 10);\r\n\t\t}\r\n\r\n\t\tif (this.hasPlayedTriple) {\r\n\t\t\tturn.isTriple = true;\r\n\t\t}\r\n\r\n\t\treturn turn;\r\n\t}\r\n\r\n\tprivate setup(): void {\r\n\t\tconst completedShape = this.base.querySelector(\r\n\t\t\tselector.completedShape\r\n\t\t) as HTMLElement;\r\n\t\tconst numberEntryBase = this.base.querySelector(\r\n\t\t\tselector.numberEntry\r\n\t\t) as HTMLElement;\r\n\t\tconst tilesDrawn = this.base.querySelector(\r\n\t\t\tselector.tilesDrawn\r\n\t\t) as HTMLElement;\r\n\r\n\t\tif (completedShape !== null) {\r\n\t\t\tthis.completedShape = new CheckboxGroup(completedShape);\r\n\t\t}\r\n\t\tif (numberEntryBase !== null) {\r\n\t\t\tthis.numberEntry = new NumberEntry(numberEntryBase, {\r\n\t\t\t\tonPointsChanged: this.onPointsChanged,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tdisplay: '.js-number-entry__display',\r\n\t\t\t\t\tnumberPad: '.js-number-entry__number-pad'\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t}\r\n\t\tif (tilesDrawn !== null) {\r\n\t\t\tthis.tilesDrawn = new CheckboxGroup(tilesDrawn);\r\n\t\t}\r\n\r\n\t\tthis.updateVisualState();\r\n\t}\r\n\r\n\tprivate updateVisualState(): void {\r\n\t\tif (this.completedShape) {\r\n\t\t\tthis.completedShape.base.hidden = this.turnType !== TurnType.Default;\r\n\t\t}\r\n\t\tif (this.tilesDrawn) {\r\n\t\t\tthis.tilesDrawn.base.hidden = this.turnType !== TurnType.Default;\r\n\t\t}\r\n\r\n\t\tconst playedTripleContainer = this.base.querySelector(\r\n\t\t\tselector.playedTripleContainer\r\n\t\t) as HTMLElement;\r\n\t\tif (playedTripleContainer !== null) {\r\n\t\t\tplayedTripleContainer.hidden = this.turnType !== TurnType.RoundStart;\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\treset(): void {\r\n\t\tconst playedTriple = this.base.querySelector(\r\n\t\t\tselector.playedTriple\r\n\t\t) as HTMLInputElement;\r\n\t\tif (playedTriple) {\r\n\t\t\tplayedTriple.checked = false;\r\n\t\t}\r\n\r\n\t\tthis.completedShape?.reset();\r\n\t\tthis.numberEntry?.reset();\r\n\t\tthis.tilesDrawn?.reset();\r\n\r\n\t\tthis.numberEntry.base.scrollIntoView();\r\n\t}\r\n}\r\n\r\n/* == EXPORTS =============================================================== */\r\nexport { baseSelector };\r\n","import { TurnType } from '01-global/enum';\r\nimport { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { Turn } from '01-global/interfaces/Turn';\r\nimport { PlayerManager } from '03-modules/PlayerManager';\r\nimport { BaseController } from '04-components/BaseController';\r\nimport { baseSelector, TurnInput } from '04-components/TurnInput/TurnInput';\r\nimport { scoreTurn } from '03-modules/scoring';\r\nimport { TurnSummary } from '01-global/interfaces/TurnSummary';\r\nimport { createLeaderboard } from '03-modules/leaderboard';\r\nimport { FlyOut } from '03-modules/fly-out';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tonRoundCompleted: (reason: RoundCompletedReason) => void;\r\n\tonShowLeaderboard: () => void;\r\n\tonTurnSubmitted: (turnSummary: TurnSummary) => void;\r\n\tselectors: Selectors;\r\n}\r\n\r\ninterface Selectors {\r\n\tflyOut: string;\r\n\tflyOutClose: string;\r\n\tleaderboard: string;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nexport enum RoundCompletedReason {\r\n\tRoundLocked = 'round-locked',\r\n\tRoundWon = 'round-won'\r\n}\r\n\r\nenum RoundType {\r\n\tDefault = 'default',\r\n\tRoundLocked = 'round-locked',\r\n\tRoundStart = 'round-start',\r\n\tRoundWon = 'round-won'\r\n}\r\n\r\nconst playerManager = PlayerManager.instance;\r\n\r\n/* == CLASS ================================================================= */\r\nexport class RoundController extends BaseController {\r\n\t/* -- CONSTRUCTOR ------------------------------------------------------- */\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tsuper(base);\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate _activePlayer: PlayerSummary;\r\n\tprivate _roundType: RoundType;\r\n\tprivate leaderboardFlyout: FlyOut;\r\n\tprivate leaderboard: HTMLElement;\r\n\tprivate maxPassedTurnStreak = 0;\r\n\tprivate passedTurnsStreak = 0;\r\n\tprivate turnInput: TurnInput = null;\r\n\r\n\t/* -- INSTANCE PROPERTIES ----------------------------------------------- */\r\n\tprivate get activePlayer(): PlayerSummary {\r\n\t\treturn this._activePlayer;\r\n\t}\r\n\tprivate set activePlayer(player: PlayerSummary) {\r\n\t\tthis._activePlayer = player;\r\n\t\tthis.header.title = player?.name;\r\n\t}\r\n\r\n\tprivate get roundType(): RoundType {\r\n\t\treturn this._roundType;\r\n\t}\r\n\tprivate set roundType(value: RoundType) {\r\n\t\tif (value === this._roundType) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis._roundType = value;\r\n\r\n\t\tswitch (value) {\r\n\t\t\tcase RoundType.Default:\r\n\t\t\t\tthis.turnInput.turnType = TurnType.Default;\r\n\t\t\t\tthis.header.subtitle = 'turn in progress';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase RoundType.RoundStart:\r\n\t\t\t\tthis.turnInput.turnType = TurnType.RoundStart;\r\n\t\t\t\tthis.header.subtitle = 'Eerste speelbeurt';\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\tthis.turnInput.turnType = TurnType.Collection;\r\n\t\t\t\tthis.header.subtitle = 'collecting points';\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\tprotected onPrimaryAction(): void {\r\n\t\tconst turn = this.turnInput.turn;\r\n\t\tthis.processPlayerInput(turn);\r\n\t}\r\n\r\n\tprotected onSecondaryAction(): void {\r\n\t\tthis.config.onShowLeaderboard?.();\r\n\t\t// if (this.leaderboard === null) {\r\n\t\t// \treturn;\r\n\t\t// }\r\n\r\n\t\t// this.leaderboard.innerHTML = createLeaderboard(playerManager.players, {\r\n\t\t// \tincludeTiles: true\r\n\t\t// });\r\n\t\t// this.leaderboardFlyout.show();\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate goToNextPlayer(): void {\r\n\t\tthis.activePlayer = playerManager.activateNextPlayer();\r\n\t\tthis.turnInput.reset();\r\n\t}\r\n\r\n\tprivate processPassedTurn(): void {\r\n\t\tthis.passedTurnsStreak++;\r\n\r\n\t\tif (this.passedTurnsStreak === this.maxPassedTurnStreak) {\r\n\t\t\tthis.config.onRoundCompleted?.(RoundCompletedReason.RoundLocked);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.goToNextPlayer();\r\n\t}\r\n\r\n\tprivate processPlayedTurn(): void {\r\n\t\tthis.passedTurnsStreak = 0;\r\n\t\tthis.roundType = RoundType.Default;\r\n\r\n\t\tif (playerManager.activePlayer.hasEmptyHand) {\r\n\t\t\tthis.config.onRoundCompleted?.(RoundCompletedReason.RoundWon);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.goToNextPlayer();\r\n\t}\r\n\r\n\tprivate processPlayerInput(turn: Turn): void {\r\n\t\tconst turnSummary = scoreTurn(turn);\r\n\r\n\t\tplayerManager.updateActivePlayerScore(turnSummary.scoreDelta);\r\n\t\tplayerManager.updateActivePlayerTileCount(turnSummary.tileDelta);\r\n\t\tthis.config.onTurnSubmitted?.(turnSummary);\r\n\r\n\t\tif (turn.points === undefined) {\r\n\t\t\tthis.processPassedTurn();\r\n\t\t} else {\r\n\t\t\tthis.processPlayedTurn();\r\n\t\t}\r\n\t}\r\n\r\n\tprivate reset(): void {\r\n\t\tthis.maxPassedTurnStreak = playerManager.players.length;\r\n\t\tthis.passedTurnsStreak = 0;\r\n\t\tthis.turnInput.reset();\r\n\t}\r\n\r\n\tprivate setup(): void {\r\n\t\tconst turnBase = this.base.querySelector(baseSelector) as HTMLElement;\r\n\t\t// const flyOutBase = this.base.querySelector(\r\n\t\t// \tthis.config.selectors.flyOut\r\n\t\t// ) as HTMLElement;\r\n\t\t// const flyOutClose = this.base.querySelector(\r\n\t\t// \tthis.config.selectors.flyOutClose\r\n\t\t// ) as HTMLElement;\r\n\t\tthis.leaderboard = this.base.querySelector(\r\n\t\t\tthis.config.selectors.leaderboard\r\n\t\t) as HTMLElement;\r\n\r\n\t\tif (baseSelector !== null) {\r\n\t\t\tthis.turnInput = new TurnInput(turnBase);\r\n\t\t}\r\n\t\t// if (flyOutBase !== null) {\r\n\t\t// \tthis.leaderboardFlyout = new FlyOut(flyOutBase);\r\n\t\t// \tflyOutClose.addEventListener('click', () => this.leaderboardFlyout.hide());\r\n\t\t// }\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tplay(roundType: RoundType): void {\r\n\t\tthis.roundType = roundType;\r\n\t\tthis.reset();\r\n\t}\r\n\r\n\tstart(startingPlayerId: PlayerSummary['id']): void {\r\n\t\tthis.activePlayer = playerManager.setActivePlayer(startingPlayerId);\r\n\r\n\t\tthis.roundType = RoundType.RoundStart;\r\n\t\tthis.reset();\r\n\t}\r\n}\r\n","import { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { rankPlayers } from './scoring';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tincludeTiles: boolean;\r\n}\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst medals = ['🥇', '🥈', '🥉'];\r\n\r\n/* == PRIVATE METHODS ======================================================= */\r\nfunction createBody(\r\n\tplayers: PlayerSummary[],\r\n\tincludeTiles: Configuration['includeTiles']\r\n): string {\r\n\tconst ranking = rankPlayers(players);\r\n\tconst rows = players\r\n\t\t.map(player => {\r\n\t\t\tconst place = ranking.findIndex(id => id === player.id);\r\n\t\t\tconst medal = medals[place] ?? place + 1;\r\n\r\n\t\t\treturn `<tr>\r\n\t\t\t<td>${medal}</td>\r\n\t\t\t<td>${player.name}</td>\r\n\t\t\t<td>${player.score}</td>\r\n\t\t\t${includeTiles ? `<td>${player.tileCount}</td>` : ''}\r\n\t\t</tr>`;\r\n\t\t})\r\n\t\t.join('');\r\n\r\n\treturn `<tbody>\r\n\t\t${rows}\r\n\t</tbody>`;\r\n}\r\n\r\nfunction createHeader(includeTiles: Configuration['includeTiles']): string {\r\n\treturn `<thead>\r\n\t\t<tr>\r\n\t\t\t<th></th>\r\n\t\t\t<th>Player</th>\r\n\t\t\t<th>Score</th>\r\n\t\t\t${includeTiles ? '<th>Tiles</th>' : ''}\r\n\t\t</tr>\r\n\t</thead>`;\r\n}\r\n\r\n/* == PUBLIC METHODS ======================================================== */\r\nexport function createLeaderboard(\r\n\tplayers: PlayerSummary[],\r\n\tconfig: Configuration\r\n): string {\r\n\treturn `<table class=\"c-leaderboard\">\r\n\t\t${createHeader(config.includeTiles)}\r\n\t\t${createBody(players, config.includeTiles)}\r\n\t</table>`;\r\n}\r\n","import { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { createLeaderboard } from '03-modules/leaderboard';\r\nimport { BaseController } from '04-components/BaseController';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tonStartNewGame: () => void;\r\n\tselectors: Selectors;\r\n}\r\n\r\ninterface Selectors {\r\n\tboard: string;\r\n}\r\n\r\n/* == CLASS ================================================================= */\r\nexport class LeaderboardController extends BaseController {\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tsuper(base);\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate board: HTMLElement;\r\n\r\n\t/* -- PROTECTED METHODS ------------------------------------------------- */\r\n\tprotected onPrimaryAction(): void {\r\n\t\tthis.config.onStartNewGame?.();\r\n\t}\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tthis.board = this.base.querySelector(\r\n\t\t\tthis.config.selectors.board\r\n\t\t) as HTMLElement;\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tshowLeaderboard(players: PlayerSummary[]): void {\r\n\t\tif (this.board === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.board.innerHTML = createLeaderboard(players, {\r\n\t\t\tincludeTiles: false\r\n\t\t});\r\n\t}\r\n}\r\n","import { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { createLeaderboard } from '03-modules/leaderboard';\r\nimport { FlyOut } from '03-modules/fly-out';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tonStartNewGame?: () => void;\r\n\tselectors: Selectors;\r\n}\r\n\r\ninterface Selectors {\r\n\tboard: string;\r\n\tcloseTrigger: string;\r\n}\r\n\r\n/* == CLASS ================================================================= */\r\nexport class LeaderboardFlyOutController {\r\n\tconstructor(readonly base: HTMLElement, private config: Configuration) {\r\n\t\tthis.setup();\r\n\t}\r\n\r\n\t/* -- FIELDS ------------------------------------------------------------ */\r\n\tprivate board: HTMLElement | undefined;\r\n\tprivate flyOutController: FlyOut | undefined;\r\n\r\n\t/* -- PRIVATE METHODS --------------------------------------------------- */\r\n\tprivate setup(): void {\r\n\t\tthis.board = this.base.querySelector(\r\n\t\t\tthis.config.selectors.board\r\n\t\t) as HTMLElement;\r\n\t\tconst closeTrigger = this.base.querySelector(\r\n\t\t\tthis.config.selectors.closeTrigger\r\n\t\t);\r\n\t\tif (closeTrigger !== null) {\r\n\t\t\tcloseTrigger.addEventListener('click', () => {\r\n\t\t\t\tthis.flyOutController?.hide();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tthis.flyOutController = new FlyOut(this.base, {\r\n\t\t\tonHidden: () => (this.base.hidden = true)\r\n\t\t});\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tshowLeaderboard(players: PlayerSummary[], includeTiles = false): void {\r\n\t\tif (this.board === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tthis.board.innerHTML = createLeaderboard(players, {\r\n\t\t\tincludeTiles\r\n\t\t});\r\n\r\n\t\tthis.base.hidden = false;\r\n\t\tsetTimeout(() => this.flyOutController?.show(), 0);\r\n\t\t// this.flyOutController?.show();\r\n\t}\r\n}\r\n","import { bind } from '02-utilities/decorators/bind';\r\n\r\n/* == TYPES ================================================================= */\r\ntype OnTimeOut = () => void;\r\n\r\n/* == CONSTANTS ============================================================= */\r\nconst cssClass = {\r\n\tactive: 'is-active'\r\n};\r\n\r\n/* == CLASS ================================================================= */\r\nexport class TimedButton {\r\n\tconstructor(readonly base: HTMLElement, private callback: OnTimeOut) {\r\n\t\tthis.bindEvents();\r\n\t}\r\n\r\n\t/* -- EVENT HANDLING ---------------------------------------------------- */\r\n\tprivate bindEvents(): void {\r\n\t\tthis.base.addEventListener('transitionend', this.onTimeOut);\r\n\t}\r\n\r\n\t@bind\r\n\tprivate onTimeOut(event: TransitionEvent): void {\r\n\t\tif (event.propertyName === 'transform') {\r\n\t\t\tthis.callback?.();\r\n\t\t}\r\n\t}\r\n\r\n\t/* -- PUBLIC METHODS ---------------------------------------------------- */\r\n\tstop(): void {\r\n\t\tthis.base.classList.remove(cssClass.active);\r\n\t}\r\n\r\n\tstart(): void {\r\n\t\tthis.base.classList.add(cssClass.active);\r\n\t}\r\n}\r\n","import { PlayerSummary } from '01-global/interfaces/PlayerSummary';\r\nimport { RemainingPoints } from '01-global/interfaces/RemainingPoints';\r\nimport { TurnSummary } from '01-global/interfaces/TurnSummary';\r\n\r\nimport { NavigationManager, Step } from '03-modules/NavigationManager';\r\nimport { PlayerManager } from '03-modules/PlayerManager';\r\nimport { getInitialTileCount, getRoundBonus } from '03-modules/rules';\r\nimport { awardRemainingPoints } from '03-modules/scoring';\r\n\r\nimport { BaseController } from '04-components/BaseController';\r\nimport { Dialog } from '04-components/Dialog';\r\n\r\nimport { GameStartController } from '05-widgets/controllers/GameStartController';\r\nimport { PlayerSelectController } from '05-widgets/controllers/PlayerSelectController';\r\nimport { PointCollectionController } from '05-widgets/controllers/PointCollectionController';\r\nimport { PointLimitController } from '05-widgets/controllers/PointLimitController';\r\nimport {\r\n\tRoundController,\r\n\tRoundCompletedReason\r\n} from '05-widgets/controllers/RoundController';\r\nimport { LeaderboardController } from '05-widgets/controllers/LeaderboardController';\r\nimport { LeaderboardFlyOutController } from '05-widgets/controllers/LeaderboardFlyOutController';\r\n\r\nimport { TimedButton } from '04-components/TimedButton';\r\n\r\n/* == INTERFACES ============================================================ */\r\ninterface Configuration {\r\n\tleaderBoardFlyOut?: LeaderboardFlyOutController;\r\n\tlimitReached: boolean;\r\n\tpointsLimit: number;\r\n\tround: number;\r\n\troundReason: RoundCompletedReason;\r\n\tstartingPlayer: PlayerSummary | null;\r\n}\r\n\r\nenum StepId {\r\n\tNames = 'names',\r\n\tPlayerSelect = 'player-select',\r\n\tPointsLimit = 'points-limit',\r\n\tRound = 'round',\r\n\tCollection = 'collection',\r\n\tLeaderboard = 'leader-board'\r\n}\r\n\r\n/* == CONST ================================================================= */\r\nconst config: Configuration = {\r\n\tlimitReached: false,\r\n\tpointsLimit: 0,\r\n\tround: 1,\r\n\troundReason: RoundCompletedReason.RoundWon,\r\n\tstartingPlayer: null\r\n};\r\n\r\nconst dialogId = {\r\n\tgameWinner: 'game-winner',\r\n\tlastRound: 'last-round',\r\n\troundWinner: 'round-winner',\r\n\tturnPlayed: 'turn-played'\r\n};\r\n\r\nconst dialog = new Dialog();\r\n\r\n// const debugPlayers: PlayerSummary[] = [\r\n// \t{\r\n// \t\thasEmptyHand: false,\r\n// \t\tid: Symbol('Player__0'),\r\n// \t\tisActive: true,\r\n// \t\tname: 'Player 1',\r\n// \t\tscore: 10,\r\n// \t\ttileCount: 1\r\n// \t},\r\n// \t{\r\n// \t\thasEmptyHand: true,\r\n// \t\tid: Symbol('Player__1'),\r\n// \t\tisActive: false,\r\n// \t\tname: 'Player 2',\r\n// \t\tscore: 17,\r\n// \t\ttileCount: 1\r\n// \t},\r\n// \t{\r\n// \t\thasEmptyHand: false,\r\n// \t\tid: Symbol('Player__2'),\r\n// \t\tisActive: false,\r\n// \t\tname: 'Player 3',\r\n// \t\tscore: 3,\r\n// \t\ttileCount: 1\r\n// \t},\r\n// \t{\r\n// \t\thasEmptyHand: false,\r\n// \t\tid: Symbol('Player__2'),\r\n// \t\tisActive: false,\r\n// \t\tname: 'Player 4',\r\n// \t\tscore: 7,\r\n// \t\ttileCount: 1\r\n// \t}\r\n// ];\r\n\r\nconst playerManager = PlayerManager.instance;\r\nconst navigationManager = new NavigationManager(\r\n\t[\r\n\t\t{ id: StepId.Names },\r\n\t\t{ id: StepId.PointsLimit },\r\n\t\t{ id: StepId.PlayerSelect },\r\n\t\t{ id: StepId.Round },\r\n\t\t{ id: StepId.Collection },\r\n\t\t{ id: StepId.Leaderboard }\r\n\t],\r\n\t{\r\n\t\tinstanceFactory,\r\n\t\tonInstanceActivated\r\n\t}\r\n);\r\n\r\n/* == CALLBACKS ============================================================= */\r\nfunction onCancel(): void {\r\n\tnavigationManager.goBack();\r\n}\r\n\r\nfunction onInstanceActivated(step: Step): void {\r\n\tswitch (step.id) {\r\n\t\tcase StepId.Collection:\r\n\t\t\t(step.instance as PointCollectionController).setPlayers(\r\n\t\t\t\tplayerManager.players\r\n\t\t\t);\r\n\t\t\t// (step.instance as PointCollectionController).setPlayers(debugPlayers);\r\n\t\t\tbreak;\r\n\r\n\t\tcase StepId.Leaderboard:\r\n\t\t\t(step.instance as LeaderboardController).showLeaderboard(\r\n\t\t\t\tplayerManager.players\r\n\t\t\t);\r\n\t\t\t// (step.instance as LeaderboardController).showLeaderboard(debugPlayers);\r\n\t\t\tbreak;\r\n\r\n\t\tcase StepId.PlayerSelect:\r\n\t\t\tpreparePlayerSelect(step.instance as PlayerSelectController);\r\n\t\t\tbreak;\r\n\r\n\t\tcase StepId.PointsLimit:\r\n\t\t\t(step.instance as PointLimitController).reset();\r\n\t\t\tbreak;\r\n\r\n\t\tcase StepId.Round:\r\n\t\t\t// (step.instance as RoundController).start(Symbol());\r\n\t\t\t(step.instance as RoundController).start(config.startingPlayer.id);\r\n\t\t\tbreak;\r\n\t}\r\n}\r\n\r\nfunction onPlayersSelected(names: string[]): void {\r\n\tconst tilesPerRound = getInitialTileCount(names.length);\r\n\r\n\tplayerManager.createPlayers(names, tilesPerRound);\r\n\tnavigationManager.goForward();\r\n}\r\n\r\nfunction onPointsCollected(result: RemainingPoints[]): void {\r\n\tconst winner = awardRemainingPoints(result);\r\n\tconst name =\r\n\t\tplayerManager.players.find(player => player.id === winner.id)?.name ?? '';\r\n\r\n\tplayerManager.updatePlayerScore(winner.id, winner.points);\r\n\r\n\tshowRoundWinnerDialog(winner.points, name);\r\n\tconfig.round++;\r\n}\r\n\r\nfunction onPointLimitSet(points: number): void {\r\n\tconfig.pointsLimit = points;\r\n\tnavigationManager.goForward();\r\n}\r\n\r\nfunction onRoundCompleted(): void {\r\n\tif (config.roundReason === RoundCompletedReason.RoundWon) {\r\n\t\tplayerManager.updateActivePlayerScore(getRoundBonus());\r\n\t}\r\n\tconfig.limitReached = false;\r\n\tnavigationManager.goForward();\r\n}\r\n\r\nfunction onStartingPlayerSecondaryAction(): void {\r\n\tif (isFirstRound()) {\r\n\t\tnavigationManager.goBack();\r\n\t} else {\r\n\t\tconfig.leaderBoardFlyOut?.showLeaderboard(playerManager.players);\r\n\t}\r\n}\r\n\r\nfunction onStartingPlayerSelected(player: PlayerSummary): void {\r\n\tconfig.startingPlayer = player;\r\n\tplayerManager.resetTileCount();\r\n\r\n\tnavigationManager.goForward();\r\n}\r\n\r\nfunction onTurnSubmitted(turn: TurnSummary): void {\r\n\tconst canShowLimitDialog = !config.limitReached;\r\n\r\n\tconfig.limitReached =\r\n\t\tconfig.limitReached || playerManager.activePlayer.score >= config.pointsLimit;\r\n\tconst onClose =\r\n\t\tcanShowLimitDialog && config.limitReached ? showLastRoundDialog : undefined;\r\n\r\n\tshowTurnPlayedDialog(turn.scoreDelta, onClose);\r\n}\r\n\r\nfunction onStartNewGame(): void {\r\n\tnavigationManager.goTo(StepId.Names);\r\n}\r\n\r\n/* == PRIVATE METHODS ======================================================= */\r\nfunction instanceFactory(id: string): BaseController | null {\r\n\t// eslint-disable-line complexity\r\n\tswitch (id) {\r\n\t\tcase StepId.Collection:\r\n\t\t\treturn initCollectionController();\r\n\r\n\t\tcase StepId.Leaderboard:\r\n\t\t\treturn initLeaderboardController();\r\n\r\n\t\tcase StepId.Names:\r\n\t\t\treturn initGameStartController();\r\n\r\n\t\tcase StepId.PlayerSelect:\r\n\t\t\treturn initPlayerSelectController();\r\n\r\n\t\tcase StepId.PointsLimit:\r\n\t\t\treturn initPointLimitController();\r\n\r\n\t\tcase StepId.Round:\r\n\t\t\treturn initRoundController();\r\n\r\n\t\tdefault:\r\n\t\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction isFirstRound(): boolean {\r\n\treturn config.round === 1;\r\n}\r\n\r\nfunction showGameWinnerDialog(): void {\r\n\tconst winner = playerManager.firstRankedPlayer;\r\n\r\n\tdialog.showDialog(dialogId.gameWinner, {\r\n\t\tonClose: () => navigationManager.goForward(),\r\n\t\tplaceholders: {\r\n\t\t\tname: winner.name,\r\n\t\t\tscore: winner.score.toString(10)\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction showLastRoundDialog(): void {\r\n\tdialog.showDialog(dialogId.lastRound, {\r\n\t\tplaceholders: {\r\n\t\t\tname: playerManager.activePlayer.name,\r\n\t\t\tlimit: config.pointsLimit.toString(10)\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction showRoundWinnerDialog(points: number, name: string): void {\r\n\tdialog.showDialog(dialogId.roundWinner, {\r\n\t\tonClose: () => {\r\n\t\t\tif (config.limitReached) {\r\n\t\t\t\tsetTimeout(showGameWinnerDialog, 0);\r\n\t\t\t} else {\r\n\t\t\t\tnavigationManager.goTo(StepId.PlayerSelect);\r\n\t\t\t}\r\n\t\t},\r\n\t\tplaceholders: {\r\n\t\t\tname,\r\n\t\t\tpoints: points.toString(10)\r\n\t\t}\r\n\t});\r\n}\r\n\r\nfunction showTurnPlayedDialog(delta: number, onClose): void {\r\n\tconst formattedDelta = `${delta > 0 ? '+' : ''}${delta}`;\r\n\tconst onBeforeShow = (content: HTMLElement) => {\r\n\t\tconst button = content.querySelector('.js-dialog__close') as HTMLElement;\r\n\t\tif (button === null) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tconst timedButton = new TimedButton(button, () => dialog.hideDialog());\r\n\t\tsetTimeout(() => timedButton.start(), 0);\r\n\t};\r\n\r\n\tdialog.showDialog(dialogId.turnPlayed, {\r\n\t\tonBeforeShow,\r\n\t\tonClose,\r\n\t\tplaceholders: {\r\n\t\t\tdelta: formattedDelta,\r\n\t\t\tname: playerManager.activePlayer.name,\r\n\t\t\tscore: playerManager.activePlayer.score.toString(10)\r\n\t\t}\r\n\t});\r\n}\r\n\r\n/* == INIT ================================================================== */\r\nfunction init(): void {\r\n\tconst leaderboardFlyoutBase = document.querySelector(\r\n\t\t'.js-leaderboard-fly-out'\r\n\t) as HTMLElement;\r\n\r\n\tif (leaderboardFlyoutBase !== null) {\r\n\t\tconfig.leaderBoardFlyOut = new LeaderboardFlyOutController(\r\n\t\t\tleaderboardFlyoutBase,\r\n\t\t\t{\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tboard: '.js-leaderboard-fly-out__leaderboard',\r\n\t\t\t\t\tcloseTrigger: '.js-leaderboard-fly-out__close'\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n}\r\n\r\nfunction initCollectionController(): PointCollectionController | null {\r\n\tconst base = document.querySelector('.js-point-collection') as HTMLElement;\r\n\r\n\treturn base === null\r\n\t\t? null\r\n\t\t: new PointCollectionController(base, {\r\n\t\t\t\tisVisible: false,\r\n\t\t\t\tonPointsCollected: onPointsCollected,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tflyOut: '.js-point-collection__fly-out',\r\n\t\t\t\t\tnumberEntry: '.js-point-collection__number-entry',\r\n\t\t\t\t\tplayerList: '.js-point-collection__list',\r\n\t\t\t\t\tsetPoints: '.js-point-collection__set-points'\r\n\t\t\t\t},\r\n\t\t\t\ttranslations: {\r\n\t\t\t\t\theaderPrompt: 'Select a player'\r\n\t\t\t\t},\r\n\t\t\t\twarningId: 'warning-points-missing'\r\n\t\t  });\r\n}\r\n\r\nfunction initGameStartController(): GameStartController | null {\r\n\tconst base = document.querySelector('.js-game-start') as HTMLElement;\r\n\r\n\treturn base\r\n\t\t? new GameStartController(base, {\r\n\t\t\t\tonPlayersSelected: onPlayersSelected,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tform: ''\r\n\t\t\t\t},\r\n\t\t\t\twarningId: 'warning-required-players'\r\n\t\t  })\r\n\t\t: null;\r\n}\r\n\r\nfunction initLeaderboardController(): LeaderboardController | null {\r\n\tconst base = document.querySelector('.js-leaderboard') as HTMLElement;\r\n\r\n\treturn base === null\r\n\t\t? null\r\n\t\t: new LeaderboardController(base, {\r\n\t\t\t\tonStartNewGame,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tboard: '.js-leaderboard__board'\r\n\t\t\t\t}\r\n\t\t  });\r\n}\r\n\r\nfunction initPointLimitController(): PointLimitController | null {\r\n\tconst base = document.querySelector('.js-point-limit') as HTMLElement;\r\n\r\n\treturn base === null\r\n\t\t? null\r\n\t\t: new PointLimitController(base, {\r\n\t\t\t\tdefaultPoints: 400,\r\n\t\t\t\tisVisible: false,\r\n\t\t\t\tonCancel,\r\n\t\t\t\tonLimitSet: onPointLimitSet,\r\n\t\t\t\tpointsValidation: {\r\n\t\t\t\t\tminimum: 100,\r\n\t\t\t\t\tmaximum: 1000,\r\n\t\t\t\t\twarningId: 'warning-invalid-points-limit'\r\n\t\t\t\t},\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tnumberEntry: '.js-point-limit__number-entry'\r\n\t\t\t\t}\r\n\t\t  });\r\n}\r\n\r\nfunction initPlayerSelectController(): PlayerSelectController | null {\r\n\tconst base = document.querySelector('.js-player-select') as HTMLElement;\r\n\r\n\treturn base === null\r\n\t\t? null\r\n\t\t: new PlayerSelectController(base, {\r\n\t\t\t\tisVisible: false,\r\n\t\t\t\tonCancel: onStartingPlayerSecondaryAction,\r\n\t\t\t\tonPlayerSelected: onStartingPlayerSelected,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tnameList: '.js-player-select__list'\r\n\t\t\t\t},\r\n\t\t\t\twarningId: 'warning-select-starting-player'\r\n\t\t  });\r\n}\r\n\r\nfunction initRoundController(): RoundController | null {\r\n\tconst base = document.querySelector('.js-round') as HTMLElement;\r\n\r\n\treturn base === null\r\n\t\t? null\r\n\t\t: new RoundController(base, {\r\n\t\t\t\tonRoundCompleted: onRoundCompleted,\r\n\t\t\t\tonShowLeaderboard: () => {\r\n\t\t\t\t\tconfig.leaderBoardFlyOut?.showLeaderboard(playerManager.players, true);\r\n\t\t\t\t},\r\n\t\t\t\tonTurnSubmitted: onTurnSubmitted,\r\n\t\t\t\tselectors: {\r\n\t\t\t\t\tflyOut: '.js-round__fly-out',\r\n\t\t\t\t\tflyOutClose: '.js-round__fly-out-close',\r\n\t\t\t\t\tleaderboard: '.js-round__leaderboard'\r\n\t\t\t\t}\r\n\t\t  });\r\n}\r\n\r\nfunction preparePlayerSelect(instance: PlayerSelectController): void {\r\n\tinstance.setPlayers(playerManager.players);\r\n\tinstance.secondaryActionTitle = isFirstRound() ? 'Back' : 'Leaderboard';\r\n\tinstance.round = config.round;\r\n}\r\n\r\ninit();\r\n"],"sourceRoot":""}